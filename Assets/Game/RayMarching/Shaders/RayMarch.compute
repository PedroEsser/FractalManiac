#pragma kernel CSMain
#include "Assets/Game/RayMarching/Shaders/Globals.hlsl"

RWTexture2D<float4> Result;

[numthreads(8,8,1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float2 resolution = _ScreenParams.xy;
    float2 uv = (id.xy / resolution) * 2.0 - 1.0;
    uv.x *= resolution.x / resolution.y;

    // reconstruct view ray in world space
    float4 rayCam = mul(_CameraInverseProjection, float4(uv, 1, 1));
    rayCam /= rayCam.w;

    float3 rayDir = normalize(mul((float3x3)_CameraToWorld, rayCam.xyz));
    float3 rayOrigin = _CameraWorldPos;

    float3 color = CalculateColor(rayOrigin, rayDir);
    Result[id.xy] = float4(color, 1.0);
}
